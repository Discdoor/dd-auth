const bcrypt = require('bcrypt');
const cfg = require('../../data/config.json');
const { verifyHashSalted } = require('../util/crypt');

/**
 * Represents a user.
 */
class User {
    /**
     * The ID of the user. Autogenerated by backend.
     * @type {String}
     */
    id;

    /**
     * The username of this user.
     * @type {String}
     */
    username;

    /**
     * The discriminant for this user. Autogenerated.
     * @type {String}
     */
    discrim;

    /**
     * The email for this user.
     * @type {String}
     */
    email;

    /**
     * The phone number of this user.
     * @type {String}
     */
    phone;

    /**
     * The avatar URL of this user. By default, a random colored image is selected from our CDN.
     * @type {String}
     */
    avatarUrl;
    /**
     * The hashed password of this user.
     * @type {String}
     */
    passwordHash;

    /**
     * The account verification status.
     *  - "VERIFIED_L1" specifies an account which has been verified with an email.
     *  - "VERIFIED_L2" specifies an account which has been verified with both an email and valid phone number.
     *  - "AWAIT_VERIF" specifies an account which has specified an email but their email has not been confirmed yet.
     *  - "UNVERIFIED" specifies an account which has not been verified. We clasify this as a new user.
     * @type {"VERIFIED_L1"|"VERIFIED_L2"|"AWAIT_VERIF"|"UNVERIFIED"}
     */
    verifStatus;

    /**
     * Constructs a new user object.
     */
    constructor() {
        /* .. */
    }

    /**
     * Verifies the user password.
     * @param {String} password The password of the user to verify.
     */
    async verifyPassword(password) {
        return await verifyHashSalted(password, this.passwordHash);
    }
}

module.exports = User;